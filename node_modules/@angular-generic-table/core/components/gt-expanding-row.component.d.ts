import { EventEmitter, Type } from '@angular/core';
import { GtRow } from '../interfaces/gt-row';
import { GtConfigField } from '../interfaces/gt-config-field';
import { GtConfigSetting } from '../interfaces/gt-config-setting';
export declare class GtExpandedRow<R extends GtRow> {
    row: R;
    columnWidth: Object;
    gtSettings: Array<GtConfigSetting>;
    gtFields: Array<GtConfigField<R, any>>;
    gtOptions: any;
    gtInfo: any;
    data: any;
    redrawEvent: EventEmitter<R>;
    toggleRowEvent: EventEmitter<R>;
    $hide(): void;
    protected $redraw(): void;
}
export declare class GtExpandingRowComponent<R extends GtRow, C extends GtExpandedRow<R>> {
    type: Type<C>;
    row: R;
    columnWidth: Object;
    gtSettings: Array<GtConfigSetting>;
    gtFields: Array<GtConfigField<R, any>>;
    gtOptions: any;
    gtInfo: any;
    data: any;
    redrawEvent: EventEmitter<R>;
    toggleRowEvent: EventEmitter<R>;
    newInstance(instance: C): void;
}

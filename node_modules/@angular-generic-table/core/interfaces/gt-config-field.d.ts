import { GtRow } from './gt-row';
import { Type, Injector } from '@angular/core';
import { GtCustomComponent } from '../components/gt-custom-component-factory';
export interface GtRenderFunc<R extends GtRow> {
    (row: R): string;
}
export interface GtValueFunc<R extends GtRow> {
    (row: R): any;
}
export interface GtClickFunc<R extends GtRow> {
    (row: R, col: any, event: MouseEvent): void;
}
export interface GtClassFunc {
    (row: any, col: any): string;
}
export interface GtConfigField<R extends GtRow, C extends GtCustomComponent<any>> {
    name: string;
    stackedHeading?: string;
    objectKey: string;
    classNames?: string;
    rowClass?: string | GtClassFunc;
    columnClass?: string | GtClassFunc;
    columnComponent?: {
        type: Type<C>;
        injector?: Injector;
    };
    render?: GtRenderFunc<R>;
    compile?: boolean;
    value?: GtValueFunc<R>;
    click?: GtClickFunc<R>;
    expand?: boolean | {
        component: Type<C>;
        data?: any;
    };
    export?: GtValueFunc<R>;
    sort?: GtValueFunc<R>;
    search?: any;
    inlineEdit?: boolean | Array<any> | 'number' | 'password' | 'email';
}
